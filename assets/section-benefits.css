/*!**************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/sass-loader/dist/cjs.js!./src/styles/sections/benefits.scss ***!
  \**************************************************************************************************************************************************************************************************/
.section--benefits {
  padding-top: 4rem;
  padding-bottom: 4rem;
}
.section--benefits .section-title {
  color: rgba(var(--color-base-accent-primary), 1);
  font-size: 2rem;
  font-weight: 500;
  text-align: center;
  margin-bottom: 4rem;
}
@media screen and (max-width: 993px) {
  .section--benefits .section-title {
    font-size: 1.5rem;
  }
}
.section--benefits .wrapper {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: auto auto;
  grid-template-areas: "one two two" "one three three";
  grid-gap: 0.5rem;
  gap: 0.5rem;
}
@media screen and (max-width: 993px) {
  .section--benefits .wrapper {
    grid-template-columns: 1fr;
    grid-template-areas: "one" "two" "three";
  }
}
.section--benefits .wrapper .benefit img {
  border-radius: 1.75rem;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.section--benefits .wrapper .benefit .text {
  border-radius: 2rem;
  background-color: rgba(var(--color-base-background-secondary), 1);
  padding: 1.75rem;
}
.section--benefits .wrapper .benefit .text h3 {
  color: rgba(var(--color-base-accent-primary), 1);
  font-size: 1.3rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
}
.section--benefits .wrapper .benefit .text p {
  color: rgba(var(--color-base-text), 1);
  font-size: 1.1rem;
  font-weight: 400;
}
.section--benefits .wrapper .benefit:nth-child(1) {
  grid-area: one;
  display: grid;
  grid-template-rows: auto 1fr;
  grid-gap: 0.5rem;
  gap: 0.5rem;
}
@media screen and (max-width: 993px) {
  .section--benefits .wrapper .benefit:nth-child(1) {
    display: flex;
    flex-direction: column-reverse;
  }
}
.section--benefits .wrapper .benefit:nth-child(2) {
  grid-area: two;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 0.5rem;
  gap: 0.5rem;
}
@media screen and (max-width: 993px) {
  .section--benefits .wrapper .benefit:nth-child(2) {
    grid-template-columns: 1fr;
  }
}
.section--benefits .wrapper .benefit:nth-child(3) {
  grid-area: three;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 0.5rem;
  gap: 0.5rem;
  background-color: rgba(var(--color-base-background-secondary), 1);
  border-radius: 1.75rem;
  overflow: hidden;
}
.section--benefits .wrapper .benefit:nth-child(3) img {
  -o-object-fit: contain;
     object-fit: contain;
  -o-object-position: end start;
     object-position: end start;
}
@media screen and (max-width: 993px) {
  .section--benefits .wrapper .benefit:nth-child(3) {
    grid-template-columns: 1fr;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/